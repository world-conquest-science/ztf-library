// This file is auto-generated by @hey-api/openapi-ts

export const Pick_TBook_slug_or_title_Schema = {
  properties: {
    slug: {
      type: "string",
    },
    title: {
      type: "string",
    },
  },
  required: ["slug", "title"],
  type: "object",
  description: "From T, pick a set of properties whose keys are in the union K",
} as const;

export const Pick_TAuthor_name_or_photo_url_or_about_or_slug_Schema = {
  properties: {
    slug: {
      type: "string",
    },
    name: {
      type: "string",
    },
    photo_url: {
      type: "string",
    },
    about: {
      type: "string",
    },
  },
  required: ["slug", "name", "photo_url", "about"],
  type: "object",
  description: "From T, pick a set of properties whose keys are in the union K",
} as const;

export const TQuoteSchema = {
  properties: {
    author: {
      $ref: "#/components/schemas/Pick_TAuthor.name-or-photo_url-or-about-or-slug_",
    },
    book: {
      $ref: "#/components/schemas/Pick_TBook.slug-or-title_",
    },
    content: {
      type: "string",
    },
    id: {
      type: "string",
    },
  },
  required: ["author", "book", "content", "id"],
  type: "object",
} as const;

export const TApiDataReponse_TQuote_Array_Schema = {
  properties: {
    data: {
      items: {
        $ref: "#/components/schemas/TQuote",
      },
      type: "array",
    },
  },
  required: ["data"],
  type: "object",
} as const;

export const TApiDataReponse_TQuote_Schema = {
  properties: {
    data: {
      $ref: "#/components/schemas/TQuote",
    },
  },
  required: ["data"],
  type: "object",
} as const;

export const TAuthorSchema = {
  properties: {
    photo_url: {
      type: "string",
    },
    about: {
      type: "string",
    },
    slug: {
      type: "string",
    },
    name: {
      type: "string",
    },
    id: {
      type: "string",
    },
  },
  required: ["photo_url", "about", "slug", "name", "id"],
  type: "object",
} as const;

export const TCategorySchema = {
  properties: {
    books: {
      items: {
        $ref: "#/components/schemas/TBook",
      },
      type: "array",
    },
    rank: {
      type: "number",
      format: "double",
    },
    description: {
      type: "string",
    },
    title: {
      type: "string",
    },
    slug: {
      type: "string",
    },
    id: {
      type: "string",
    },
  },
  required: ["rank", "description", "title", "slug", "id"],
  type: "object",
} as const;

export const TLanguageSchema = {
  properties: {
    code: {
      type: "string",
    },
    id: {
      type: "string",
    },
  },
  required: ["code", "id"],
  type: "object",
} as const;

export const TCurrencySchema = {
  type: "string",
  enum: ["eur", "usd", "xof"],
} as const;

export const TPriceSchema = {
  properties: {
    max_quantity: {
      type: "number",
      format: "double",
    },
    min_quantity: {
      type: "number",
      format: "double",
    },
    currency: {
      $ref: "#/components/schemas/TCurrency",
    },
    amount: {
      type: "number",
      format: "double",
    },
    id: {
      type: "string",
    },
  },
  required: ["currency", "amount", "id"],
  type: "object",
} as const;

export const TFormatSchema = {
  properties: {
    prices: {
      items: {
        $ref: "#/components/schemas/TPrice",
      },
      type: "array",
    },
    is_available: {
      type: "boolean",
    },
    label: {
      type: "string",
    },
  },
  required: ["prices", "is_available", "label"],
  type: "object",
} as const;

export const TBookSchema = {
  properties: {
    preface: {
      type: "string",
    },
    image_url: {
      type: "string",
    },
    thumbnail: {
      type: "string",
    },
    formats: {
      items: {
        $ref: "#/components/schemas/TFormat",
      },
      type: "array",
    },
    language: {
      $ref: "#/components/schemas/TLanguage",
    },
    categories: {
      items: {
        $ref: "#/components/schemas/TCategory",
      },
      type: "array",
    },
    author: {
      $ref: "#/components/schemas/TAuthor",
    },
    publisher: {
      type: "string",
    },
    publish_date: {
      type: "number",
      format: "double",
    },
    pages_count: {
      type: "number",
      format: "double",
    },
    isbn: {
      type: "string",
    },
    ebook_version_url: {
      type: "string",
    },
    dimensions: {
      type: "string",
    },
    audio_version_url: {
      type: "string",
    },
    slug: {
      type: "string",
    },
    title: {
      type: "string",
    },
    id: {
      type: "string",
    },
  },
  required: [
    "preface",
    "image_url",
    "thumbnail",
    "formats",
    "language",
    "categories",
    "author",
    "publisher",
    "publish_date",
    "pages_count",
    "isbn",
    "ebook_version_url",
    "dimensions",
    "audio_version_url",
    "slug",
    "title",
    "id",
  ],
  type: "object",
} as const;

export const TApiDataReponse_TCategory_Array_Schema = {
  properties: {
    data: {
      items: {
        $ref: "#/components/schemas/TCategory",
      },
      type: "array",
    },
  },
  required: ["data"],
  type: "object",
} as const;

export const TApiPaginatedReponse_TBook_Array_Schema = {
  properties: {
    offset: {
      type: "number",
      format: "double",
    },
    limit: {
      type: "number",
      format: "double",
    },
    count: {
      type: "number",
      format: "double",
    },
    data: {
      items: {
        $ref: "#/components/schemas/TBook",
      },
      type: "array",
    },
  },
  required: ["offset", "limit", "count", "data"],
  type: "object",
} as const;

export const TApiDataReponse_TBook_Schema = {
  properties: {
    data: {
      $ref: "#/components/schemas/TBook",
    },
  },
  required: ["data"],
  type: "object",
} as const;
